"""Enhance product and category models

Revision ID: 37811d0d0ae7
Revises: 6305da30268d
Create Date: 2025-07-21 13:19:58.169462

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '37811d0d0ae7'
down_revision: Union[str, Sequence[str], None] = '6305da30268d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('categories', sa.Column('api_category_id', sa.Integer(), nullable=True))
    op.add_column('categories', sa.Column('parent_id', sa.Integer(), nullable=True))
    op.alter_column('categories', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('categories', 'name_ka',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('categories', 'name_en',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('categories', 'name_ru',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.create_index(op.f('ix_categories_api_category_id'), 'categories', ['api_category_id'], unique=True)
    op.create_unique_constraint(None, 'categories', ['name'])
    op.create_foreign_key(None, 'categories', 'categories', ['parent_id'], ['id'])
    op.add_column('products', sa.Column('api_product_id', sa.Integer(), nullable=True))
    op.add_column('products', sa.Column('bar_code', sa.String(length=255), nullable=True))
    op.add_column('products', sa.Column('image_url', sa.String(length=512), nullable=True))
    op.add_column('products', sa.Column('category_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_products_api_product_id'), 'products', ['api_product_id'], unique=True)
    op.create_index(op.f('ix_products_name'), 'products', ['name'], unique=False)
    op.create_foreign_key(None, 'products', 'categories', ['category_id'], ['id'])
    op.drop_column('products', 'keywords')
    op.drop_column('products', 'type')
    op.drop_column('products', 'size')
    op.drop_column('products', 'upc')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('products', sa.Column('upc', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('size', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('type', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('keywords', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.drop_index(op.f('ix_products_name'), table_name='products')
    op.drop_index(op.f('ix_products_api_product_id'), table_name='products')
    op.drop_column('products', 'category_id')
    op.drop_column('products', 'image_url')
    op.drop_column('products', 'bar_code')
    op.drop_column('products', 'api_product_id')
    op.drop_constraint(None, 'categories', type_='foreignkey')
    op.drop_constraint(None, 'categories', type_='unique')
    op.drop_index(op.f('ix_categories_api_category_id'), table_name='categories')
    op.alter_column('categories', 'name_ru',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('categories', 'name_en',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('categories', 'name_ka',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('categories', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_column('categories', 'parent_id')
    op.drop_column('categories', 'api_category_id')
    # ### end Alembic commands ###
